@model MyApp.Presentation.Models.DashboardViewModel
@{
    ViewData["Title"] = "Panel de Control";
}

<div class="row">
    <div class="col-12">
        <div class="dashboard-header text-center text-md-start">
            <h1 class="mb-3">
                <i class="fas fa-tachometer-alt me-2"></i> Panel de Control
            </h1>
        </div>
    </div>
</div>

<!-- Estadísticas -->
<div class="row g-3 mb-4">
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-crema text-center">
            <div class="card-body">
                <h4>@Model.TotalItems</h4>
                <p><i class="fas fa-cubes"></i> Total Artículos</p>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-verde text-center">
            <div class="card-body">
                <h4>@Model.AvailableItems</h4>
                <p><i class="fas fa-check-circle"></i> Disponibles</p>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-coral text-center">
            <div class="card-body">
                <h4>@Model.ItemsOnLoan</h4>
                <p><i class="fas fa-handshake"></i> En Préstamo</p>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-celeste text-center">
            <div class="card-body">
                <h4>@Model.ActiveLoans</h4>
                <p><i class="fas fa-clock"></i> Préstamos Activos</p>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-rosa text-center">
            <div class="card-body">
                <h4>@Model.PendingLoans</h4>
                <p><i class="fas fa-hourglass-half"></i> Pendientes</p>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-4">
        <div class="card card-gris text-center">
            <div class="card-body">
                <h4>@Model.TotalUsers</h4>
                <p><i class="fas fa-users"></i> Total Usuarios</p>
            </div>
        </div>
    </div>
</div>

<!-- Tablas -->
<div class="row g-3">
    <div class="col-12 col-lg-8">
        <div class="card card-celeste">
            <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                <h5><i class="fas fa-history me-2"></i> Préstamos Recientes</h5>
                <a asp-controller="Loans" asp-action="Index" class="btn btn-sm btn-outline-secondary mt-2 mt-lg-0">Ver Todos</a>
            </div>
            <div class="card-body">
                @if (Model.RecentLoans.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover table-sm">
                            <thead class="table-light">
                                <tr>
                                    <th>Usuario</th>
                                    <th>Artículo</th>
                                    <th>Fecha Solicitud</th>
                                    <th>Estado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var loan in Model.RecentLoans)
                                {
                                    <tr>
                                        <td>@loan.UserName</td>
                                        <td>@loan.ItemName</td>
                                        <td>@loan.RequestDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <span class="badge badge-@GetStatusBadgeClass(loan.Status)">
                                                @GetStatusText(loan.Status)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted text-center mb-0">No hay préstamos recientes</p>
                }
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-4">
        <div class="card card-rosa">
            <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                <h5 class="text-danger"><i class="fas fa-exclamation-triangle me-2"></i> Préstamos Vencidos</h5>
                @if (User.IsInRole("Administrator"))
                {
                    <a asp-controller="Loans" asp-action="Overdue" class="btn btn-sm btn-outline-danger mt-2 mt-lg-0">Ver Todos</a>
                }
            </div>
            <div class="card-body">
                @if (Model.OverdueLoans.Any())
                {
                    <div class="list-group list-group-flush">
                        @foreach (var loan in Model.OverdueLoans.Take(5))
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-start">
                                <div>
                                    <div class="fw-bold">@loan.ItemName</div>
                                    <small class="text-muted">@loan.UserName</small>
                                </div>
                                <small class="text-danger">
                                    @((DateTime.Now - loan.DeliveryDate.Value).Days) días
                                </small>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted text-center mb-0">No hay préstamos vencidos</p>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(MyApp.Entities.Enums.LoanStatus status)
    {
        return status switch
        {
            MyApp.Entities.Enums.LoanStatus.Pending => "warning",
            MyApp.Entities.Enums.LoanStatus.Approved => "info",
            MyApp.Entities.Enums.LoanStatus.Delivered => "primary",
            MyApp.Entities.Enums.LoanStatus.Returned => "success",
            MyApp.Entities.Enums.LoanStatus.Rejected => "danger",
            _ => "secondary"
        };
    }

    string GetStatusText(MyApp.Entities.Enums.LoanStatus status)
    {
        return status switch
        {
            MyApp.Entities.Enums.LoanStatus.Pending => "Pendiente",
            MyApp.Entities.Enums.LoanStatus.Approved => "Aprobado",
            MyApp.Entities.Enums.LoanStatus.Delivered => "Entregado",
            MyApp.Entities.Enums.LoanStatus.Returned => "Devuelto",
            MyApp.Entities.Enums.LoanStatus.Rejected => "Rechazado",
            _ => "Desconocido"
        };
    }
}
